/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestimonialsRouteImport } from './routes/testimonials'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as FormationsIndexRouteImport } from './routes/formations/index'
import { Route as AuthenticatedProfilRouteImport } from './routes/_authenticated/profil'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as FormationsIdIndexRouteImport } from './routes/formations/$id/index'
import { Route as FormationsIdSessionsRouteImport } from './routes/formations/$id/sessions'
import { Route as AuthenticatedCrudFormationsIndexRouteImport } from './routes/_authenticated/crud/formations/index'
import { Route as AuthenticatedCrudFormationsNewRouteImport } from './routes/_authenticated/crud/formations/new'
import { Route as AuthenticatedCrudFormationsIdEditRouteImport } from './routes/_authenticated/crud/formations/$id/edit'

const TestimonialsRoute = TestimonialsRouteImport.update({
  id: '/testimonials',
  path: '/testimonials',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const FormationsIndexRoute = FormationsIndexRouteImport.update({
  id: '/formations/',
  path: '/formations/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedProfilRoute = AuthenticatedProfilRouteImport.update({
  id: '/profil',
  path: '/profil',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const FormationsIdIndexRoute = FormationsIdIndexRouteImport.update({
  id: '/formations/$id/',
  path: '/formations/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const FormationsIdSessionsRoute = FormationsIdSessionsRouteImport.update({
  id: '/formations/$id/sessions',
  path: '/formations/$id/sessions',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedCrudFormationsIndexRoute =
  AuthenticatedCrudFormationsIndexRouteImport.update({
    id: '/crud/formations/',
    path: '/crud/formations/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCrudFormationsNewRoute =
  AuthenticatedCrudFormationsNewRouteImport.update({
    id: '/crud/formations/new',
    path: '/crud/formations/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCrudFormationsIdEditRoute =
  AuthenticatedCrudFormationsIdEditRouteImport.update({
    id: '/crud/formations/$id/edit',
    path: '/crud/formations/$id/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/testimonials': typeof TestimonialsRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/profil': typeof AuthenticatedProfilRoute
  '/formations': typeof FormationsIndexRoute
  '/formations/$id/sessions': typeof FormationsIdSessionsRoute
  '/formations/$id': typeof FormationsIdIndexRoute
  '/crud/formations/new': typeof AuthenticatedCrudFormationsNewRoute
  '/crud/formations': typeof AuthenticatedCrudFormationsIndexRoute
  '/crud/formations/$id/edit': typeof AuthenticatedCrudFormationsIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/testimonials': typeof TestimonialsRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/profil': typeof AuthenticatedProfilRoute
  '/formations': typeof FormationsIndexRoute
  '/formations/$id/sessions': typeof FormationsIdSessionsRoute
  '/formations/$id': typeof FormationsIdIndexRoute
  '/crud/formations/new': typeof AuthenticatedCrudFormationsNewRoute
  '/crud/formations': typeof AuthenticatedCrudFormationsIndexRoute
  '/crud/formations/$id/edit': typeof AuthenticatedCrudFormationsIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/testimonials': typeof TestimonialsRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/profil': typeof AuthenticatedProfilRoute
  '/formations/': typeof FormationsIndexRoute
  '/formations/$id/sessions': typeof FormationsIdSessionsRoute
  '/formations/$id/': typeof FormationsIdIndexRoute
  '/_authenticated/crud/formations/new': typeof AuthenticatedCrudFormationsNewRoute
  '/_authenticated/crud/formations/': typeof AuthenticatedCrudFormationsIndexRoute
  '/_authenticated/crud/formations/$id/edit': typeof AuthenticatedCrudFormationsIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/login'
    | '/logout'
    | '/testimonials'
    | '/dashboard'
    | '/profil'
    | '/formations'
    | '/formations/$id/sessions'
    | '/formations/$id'
    | '/crud/formations/new'
    | '/crud/formations'
    | '/crud/formations/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/login'
    | '/logout'
    | '/testimonials'
    | '/dashboard'
    | '/profil'
    | '/formations'
    | '/formations/$id/sessions'
    | '/formations/$id'
    | '/crud/formations/new'
    | '/crud/formations'
    | '/crud/formations/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/contact'
    | '/login'
    | '/logout'
    | '/testimonials'
    | '/_authenticated/dashboard'
    | '/_authenticated/profil'
    | '/formations/'
    | '/formations/$id/sessions'
    | '/formations/$id/'
    | '/_authenticated/crud/formations/new'
    | '/_authenticated/crud/formations/'
    | '/_authenticated/crud/formations/$id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  TestimonialsRoute: typeof TestimonialsRoute
  FormationsIndexRoute: typeof FormationsIndexRoute
  FormationsIdSessionsRoute: typeof FormationsIdSessionsRoute
  FormationsIdIndexRoute: typeof FormationsIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/testimonials': {
      id: '/testimonials'
      path: '/testimonials'
      fullPath: '/testimonials'
      preLoaderRoute: typeof TestimonialsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/formations/': {
      id: '/formations/'
      path: '/formations'
      fullPath: '/formations'
      preLoaderRoute: typeof FormationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/profil': {
      id: '/_authenticated/profil'
      path: '/profil'
      fullPath: '/profil'
      preLoaderRoute: typeof AuthenticatedProfilRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/formations/$id/': {
      id: '/formations/$id/'
      path: '/formations/$id'
      fullPath: '/formations/$id'
      preLoaderRoute: typeof FormationsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/formations/$id/sessions': {
      id: '/formations/$id/sessions'
      path: '/formations/$id/sessions'
      fullPath: '/formations/$id/sessions'
      preLoaderRoute: typeof FormationsIdSessionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/crud/formations/': {
      id: '/_authenticated/crud/formations/'
      path: '/crud/formations'
      fullPath: '/crud/formations'
      preLoaderRoute: typeof AuthenticatedCrudFormationsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/crud/formations/new': {
      id: '/_authenticated/crud/formations/new'
      path: '/crud/formations/new'
      fullPath: '/crud/formations/new'
      preLoaderRoute: typeof AuthenticatedCrudFormationsNewRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/crud/formations/$id/edit': {
      id: '/_authenticated/crud/formations/$id/edit'
      path: '/crud/formations/$id/edit'
      fullPath: '/crud/formations/$id/edit'
      preLoaderRoute: typeof AuthenticatedCrudFormationsIdEditRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedProfilRoute: typeof AuthenticatedProfilRoute
  AuthenticatedCrudFormationsNewRoute: typeof AuthenticatedCrudFormationsNewRoute
  AuthenticatedCrudFormationsIndexRoute: typeof AuthenticatedCrudFormationsIndexRoute
  AuthenticatedCrudFormationsIdEditRoute: typeof AuthenticatedCrudFormationsIdEditRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedProfilRoute: AuthenticatedProfilRoute,
  AuthenticatedCrudFormationsNewRoute: AuthenticatedCrudFormationsNewRoute,
  AuthenticatedCrudFormationsIndexRoute: AuthenticatedCrudFormationsIndexRoute,
  AuthenticatedCrudFormationsIdEditRoute:
    AuthenticatedCrudFormationsIdEditRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  TestimonialsRoute: TestimonialsRoute,
  FormationsIndexRoute: FormationsIndexRoute,
  FormationsIdSessionsRoute: FormationsIdSessionsRoute,
  FormationsIdIndexRoute: FormationsIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
