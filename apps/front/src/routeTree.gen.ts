/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
<<<<<<< HEAD
import { Route as TestimonialsRouteImport } from './routes/testimonials'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ContactRouteImport } from './routes/contact'
=======
import { Route as LogouttestRouteImport } from './routes/logouttest'
import { Route as DashboardtestRouteImport } from './routes/dashboardtest'
import { Route as AuthtestRouteImport } from './routes/authtest'
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
<<<<<<< HEAD
import { Route as FormationsIndexRouteImport } from './routes/formations/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as FormationsIdIndexRouteImport } from './routes/formations/$id/index'
import { Route as FormationsIdSessionsRouteImport } from './routes/formations/$id/sessions'
import { Route as AdminDashboardFormationsIndexRouteImport } from './routes/admin/dashboard/formations/index'
import { Route as AdminDashboardFormationsNewRouteImport } from './routes/admin/dashboard/formations/new'
import { Route as AdminDashboardFormationsIdEditRouteImport } from './routes/admin/dashboard/formations/$id/edit'

const TestimonialsRoute = TestimonialsRouteImport.update({
  id: '/testimonials',
  path: '/testimonials',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
=======
import { Route as AuthenticatedProfilRouteImport } from './routes/_authenticated/profil'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'

const LogouttestRoute = LogouttestRouteImport.update({
  id: '/logouttest',
  path: '/logouttest',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardtestRoute = DashboardtestRouteImport.update({
  id: '/dashboardtest',
  path: '/dashboardtest',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthtestRoute = AuthtestRouteImport.update({
  id: '/authtest',
  path: '/authtest',
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
<<<<<<< HEAD
const FormationsIndexRoute = FormationsIndexRouteImport.update({
  id: '/formations/',
  path: '/formations/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const FormationsIdIndexRoute = FormationsIdIndexRouteImport.update({
  id: '/formations/$id/',
  path: '/formations/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const FormationsIdSessionsRoute = FormationsIdSessionsRouteImport.update({
  id: '/formations/$id/sessions',
  path: '/formations/$id/sessions',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardFormationsIndexRoute =
  AdminDashboardFormationsIndexRouteImport.update({
    id: '/admin/dashboard/formations/',
    path: '/admin/dashboard/formations/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AdminDashboardFormationsNewRoute =
  AdminDashboardFormationsNewRouteImport.update({
    id: '/admin/dashboard/formations/new',
    path: '/admin/dashboard/formations/new',
    getParentRoute: () => rootRouteImport,
  } as any)
const AdminDashboardFormationsIdEditRoute =
  AdminDashboardFormationsIdEditRouteImport.update({
    id: '/admin/dashboard/formations/$id/edit',
    path: '/admin/dashboard/formations/$id/edit',
    getParentRoute: () => rootRouteImport,
  } as any)
=======
const AuthenticatedProfilRoute = AuthenticatedProfilRouteImport.update({
  id: '/profil',
  path: '/profil',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
<<<<<<< HEAD
  '/contact': typeof ContactRoute
  '/login': typeof LoginRoute
  '/testimonials': typeof TestimonialsRoute
  '/admin': typeof AdminIndexRoute
  '/formations': typeof FormationsIndexRoute
  '/formations/$id/sessions': typeof FormationsIdSessionsRoute
  '/formations/$id': typeof FormationsIdIndexRoute
  '/admin/dashboard/formations/new': typeof AdminDashboardFormationsNewRoute
  '/admin/dashboard/formations': typeof AdminDashboardFormationsIndexRoute
  '/admin/dashboard/formations/$id/edit': typeof AdminDashboardFormationsIdEditRoute
=======
  '/authtest': typeof AuthtestRoute
  '/dashboardtest': typeof DashboardtestRoute
  '/logouttest': typeof LogouttestRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/profil': typeof AuthenticatedProfilRoute
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
<<<<<<< HEAD
  '/contact': typeof ContactRoute
  '/login': typeof LoginRoute
  '/testimonials': typeof TestimonialsRoute
  '/admin': typeof AdminIndexRoute
  '/formations': typeof FormationsIndexRoute
  '/formations/$id/sessions': typeof FormationsIdSessionsRoute
  '/formations/$id': typeof FormationsIdIndexRoute
  '/admin/dashboard/formations/new': typeof AdminDashboardFormationsNewRoute
  '/admin/dashboard/formations': typeof AdminDashboardFormationsIndexRoute
  '/admin/dashboard/formations/$id/edit': typeof AdminDashboardFormationsIdEditRoute
=======
  '/authtest': typeof AuthtestRoute
  '/dashboardtest': typeof DashboardtestRoute
  '/logouttest': typeof LogouttestRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/profil': typeof AuthenticatedProfilRoute
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
<<<<<<< HEAD
  '/contact': typeof ContactRoute
  '/login': typeof LoginRoute
  '/testimonials': typeof TestimonialsRoute
  '/admin/': typeof AdminIndexRoute
  '/formations/': typeof FormationsIndexRoute
  '/formations/$id/sessions': typeof FormationsIdSessionsRoute
  '/formations/$id/': typeof FormationsIdIndexRoute
  '/admin/dashboard/formations/new': typeof AdminDashboardFormationsNewRoute
  '/admin/dashboard/formations/': typeof AdminDashboardFormationsIndexRoute
  '/admin/dashboard/formations/$id/edit': typeof AdminDashboardFormationsIdEditRoute
=======
  '/authtest': typeof AuthtestRoute
  '/dashboardtest': typeof DashboardtestRoute
  '/logouttest': typeof LogouttestRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/profil': typeof AuthenticatedProfilRoute
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
<<<<<<< HEAD
    | '/contact'
    | '/login'
    | '/testimonials'
    | '/admin'
    | '/formations'
    | '/formations/$id/sessions'
    | '/formations/$id'
    | '/admin/dashboard/formations/new'
    | '/admin/dashboard/formations'
    | '/admin/dashboard/formations/$id/edit'
=======
    | '/authtest'
    | '/dashboardtest'
    | '/logouttest'
    | '/dashboard'
    | '/profil'
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
<<<<<<< HEAD
    | '/contact'
    | '/login'
    | '/testimonials'
    | '/admin'
    | '/formations'
    | '/formations/$id/sessions'
    | '/formations/$id'
    | '/admin/dashboard/formations/new'
    | '/admin/dashboard/formations'
    | '/admin/dashboard/formations/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/login'
    | '/testimonials'
    | '/admin/'
    | '/formations/'
    | '/formations/$id/sessions'
    | '/formations/$id/'
    | '/admin/dashboard/formations/new'
    | '/admin/dashboard/formations/'
    | '/admin/dashboard/formations/$id/edit'
=======
    | '/authtest'
    | '/dashboardtest'
    | '/logouttest'
    | '/dashboard'
    | '/profil'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/authtest'
    | '/dashboardtest'
    | '/logouttest'
    | '/_authenticated/dashboard'
    | '/_authenticated/profil'
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
<<<<<<< HEAD
  ContactRoute: typeof ContactRoute
  LoginRoute: typeof LoginRoute
  TestimonialsRoute: typeof TestimonialsRoute
  AdminIndexRoute: typeof AdminIndexRoute
  FormationsIndexRoute: typeof FormationsIndexRoute
  FormationsIdSessionsRoute: typeof FormationsIdSessionsRoute
  FormationsIdIndexRoute: typeof FormationsIdIndexRoute
  AdminDashboardFormationsNewRoute: typeof AdminDashboardFormationsNewRoute
  AdminDashboardFormationsIndexRoute: typeof AdminDashboardFormationsIndexRoute
  AdminDashboardFormationsIdEditRoute: typeof AdminDashboardFormationsIdEditRoute
=======
  AuthtestRoute: typeof AuthtestRoute
  DashboardtestRoute: typeof DashboardtestRoute
  LogouttestRoute: typeof LogouttestRoute
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
<<<<<<< HEAD
    '/testimonials': {
      id: '/testimonials'
      path: '/testimonials'
      fullPath: '/testimonials'
      preLoaderRoute: typeof TestimonialsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
=======
    '/logouttest': {
      id: '/logouttest'
      path: '/logouttest'
      fullPath: '/logouttest'
      preLoaderRoute: typeof LogouttestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboardtest': {
      id: '/dashboardtest'
      path: '/dashboardtest'
      fullPath: '/dashboardtest'
      preLoaderRoute: typeof DashboardtestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/authtest': {
      id: '/authtest'
      path: '/authtest'
      fullPath: '/authtest'
      preLoaderRoute: typeof AuthtestRouteImport
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
<<<<<<< HEAD
    '/formations/': {
      id: '/formations/'
      path: '/formations'
      fullPath: '/formations'
      preLoaderRoute: typeof FormationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/formations/$id/': {
      id: '/formations/$id/'
      path: '/formations/$id'
      fullPath: '/formations/$id'
      preLoaderRoute: typeof FormationsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/formations/$id/sessions': {
      id: '/formations/$id/sessions'
      path: '/formations/$id/sessions'
      fullPath: '/formations/$id/sessions'
      preLoaderRoute: typeof FormationsIdSessionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard/formations/': {
      id: '/admin/dashboard/formations/'
      path: '/admin/dashboard/formations'
      fullPath: '/admin/dashboard/formations'
      preLoaderRoute: typeof AdminDashboardFormationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard/formations/new': {
      id: '/admin/dashboard/formations/new'
      path: '/admin/dashboard/formations/new'
      fullPath: '/admin/dashboard/formations/new'
      preLoaderRoute: typeof AdminDashboardFormationsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard/formations/$id/edit': {
      id: '/admin/dashboard/formations/$id/edit'
      path: '/admin/dashboard/formations/$id/edit'
      fullPath: '/admin/dashboard/formations/$id/edit'
      preLoaderRoute: typeof AdminDashboardFormationsIdEditRouteImport
      parentRoute: typeof rootRouteImport
=======
    '/_authenticated/profil': {
      id: '/_authenticated/profil'
      path: '/profil'
      fullPath: '/profil'
      preLoaderRoute: typeof AuthenticatedProfilRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedProfilRoute: typeof AuthenticatedProfilRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedProfilRoute: AuthenticatedProfilRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
<<<<<<< HEAD
  ContactRoute: ContactRoute,
  LoginRoute: LoginRoute,
  TestimonialsRoute: TestimonialsRoute,
  AdminIndexRoute: AdminIndexRoute,
  FormationsIndexRoute: FormationsIndexRoute,
  FormationsIdSessionsRoute: FormationsIdSessionsRoute,
  FormationsIdIndexRoute: FormationsIdIndexRoute,
  AdminDashboardFormationsNewRoute: AdminDashboardFormationsNewRoute,
  AdminDashboardFormationsIndexRoute: AdminDashboardFormationsIndexRoute,
  AdminDashboardFormationsIdEditRoute: AdminDashboardFormationsIdEditRoute,
=======
  AuthtestRoute: AuthtestRoute,
  DashboardtestRoute: DashboardtestRoute,
  LogouttestRoute: LogouttestRoute,
>>>>>>> 01e7d4089682a32ed15219ef6048fee3fa02d7a4
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
